{"version":3,"sources":["App.js","index.js"],"names":["Reminder","id","name","timestamp","deleteReminderButtonFunction","console","log","thisId","onClick","ReminderForm","props","onSubmit","addReminderFunction","value","nameToAdd","onChange","handleReminderChange","dateToAdd","handleDateChange","type","App","event","target","setState","newName","newDate","addReminder","preventDefault","state","reminders","map","reminder","includes","alert","newReminderObject","axios","post","then","response","concat","data","reloadList","get","deleteReminder","window","confirm","delete","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kMAgBMA,EAAW,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,GAAIC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,6BAErCC,QAAQC,IAAR,4CAAiDL,IAEjD,IAAIM,EAAS,CAAEN,MAEf,OAEI,+BAAKE,EAAL,KAAkBD,EAAlB,IAAwB,wBAAQM,QAASJ,EAA6BG,GAA9C,wBAK1BE,EAAe,SAACC,GAElB,OACI,8BACI,uBAAMC,SAAUD,EAAME,oBAAtB,UACI,kDACa,uBAAOC,MAAOH,EAAMI,UACzBC,SAAUL,EAAMM,0BAExB,kDACa,uBAAOH,MAAOH,EAAMO,UACzBF,SAAUL,EAAMQ,sBAExB,8BACI,wBAAQC,KAAK,SAAb,2CAmJLC,E,kDAxIX,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IAsBVM,qBAAuB,SAACK,GACpBhB,QAAQC,IAAIe,EAAMC,OAAOT,OACzB,EAAKU,SAAS,CAAEC,QAASH,EAAMC,OAAOT,SAzBvB,EA4BnBK,iBAAmB,SAACG,GAChBhB,QAAQC,IAAIe,EAAMC,OAAOT,OACzB,EAAKU,SAAS,CAAEE,QAASJ,EAAMC,OAAOT,SA9BvB,EAkCnBa,YAAc,SAACL,GAOX,GANAA,EAAMM,iBAMF,EAAKC,MAAMC,UAAUC,KAAI,SAAAC,GAAQ,OAAIA,EAAS7B,QAAM8B,SAAS,EAAKJ,MAAMJ,SAGxEnB,QAAQC,IAAI,gDACZ2B,MAAM,6EAEH,CACH5B,QAAQC,IAAI,oBAEZ,IAAM4B,EAAoB,CACtB/B,UAAW,EAAKyB,MAAMH,QACtBvB,KAAM,EAAK0B,MAAMJ,SAIrBW,IAAMC,KAAK,aAAcF,GACpBG,MAAK,SAAAC,GACF,EAAKf,SAAS,CACVM,UAAW,EAAKD,MAAMC,UAAUU,OAAOD,EAASE,MAChDhB,QAAS,UA5DV,EAoEnBiB,WAAa,SAAC/B,GACVyB,IAAMO,IAAI,cAAcL,MAAK,SAAAC,GACzBjC,QAAQC,IAAI,qDACZ,EAAKiB,SAAS,CAAEM,UAAWS,EAASE,WAvEzB,EAgFnBG,eAAiB,SAACjC,GAEd,OAAO,WAECkC,OAAOC,QAAP,iEAAmEnC,EAAMT,GAAzE,OAEAkC,IAAMW,OAAN,qBAA2BpC,EAAMT,KAC5BoC,MAAK,SAAAC,GACFjC,QAAQC,IAAR,gDAAqDI,EAAMT,KAC3D,EAAKwC,kBAvFrB,EAAKb,MAAQ,CACTC,UAAW,GACXL,QAAS,GACTC,QAAS,IAEbpB,QAAQC,IAAI,eAPG,E,qDAanB,WAAqB,IAAD,OAChBD,QAAQC,IAAI,aACZ6B,IACKO,IAAI,cACJL,MAAK,SAAAC,GACFjC,QAAQC,IAAI,qBACZ,EAAKiB,SAAS,CAAEM,UAAWS,EAASE,Y,oBAgGhD,WAAU,IAAD,OAIL,OAHAnC,QAAQC,IAAI,UAIR,gCACI,8CACA,cAAC,EAAD,CAAcM,oBAAqBmC,KAAKrB,YAAaZ,UAAWiC,KAAKvB,QACjER,qBAAsB+B,KAAK/B,qBAAsBE,iBAAkB6B,KAAK7B,mBAG5E,mEACA,6BACK6B,KAAKnB,MAAMC,UAAUC,KAAI,SAAAC,GAAQ,OAAI,cAAC,EAAD,CAA4B7B,KAAM6B,EAAS7B,KAAMC,UAAW4B,EAAS5B,UACvGC,6BAA8B,EAAKuC,eAAgB1C,GAAI8B,EAAS9B,IADf8B,EAAS9B,gB,GAjIhE+C,IAAMC,WCnCxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b9e29e8d.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios'\nconst baseUrl = '/reminders'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\n\n    // Teht 2.10 - muistiinpanojen poistaminen\n    // poistetaan parametrina olevan id:n mukainen muistiinpano palvelimelta\n    // axios.delete-metodilla\n    // Sitten vastauksen saamisen jälkeen ladataan lista uudstaan, eli reloadList --> axios.get()\n    // Kyselyikkuna kysyy varmistusta (if-lohko)\n\nconst Reminder = ({ id, name, timestamp, deleteReminderButtonFunction }) => {\n\n    console.log(`rendering reminder... reminder id ${id}`)\n\n    let thisId = { id }\n\n    return (\n\n        <li>{timestamp}: {name} <button onClick={deleteReminderButtonFunction(thisId)}>Poista</button></li>\n    )\n}\n\n\nconst ReminderForm = (props) => {\n\n    return (\n        <div>\n            <form onSubmit={props.addReminderFunction}>\n                <div>\n                    Sisältö: <input value={props.nameToAdd}\n                        onChange={props.handleReminderChange} />\n                </div>\n                <div>\n                    Päiväys: <input value={props.dateToAdd}\n                        onChange={props.handleDateChange} />\n                </div>\n                <div>\n                    <button type=\"submit\">Lisää muistutus</button>\n                </div>\n            </form>\n        </div>\n    )\n\n}\n\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            reminders: [],\n            newName: '',\n            newDate: ''\n        }\n        console.log('constructor')\n    }\n\n    // teht 2.8 -- haetaan tiedot palvelimelta\n    // tämä componentDidMount() on elinkaarimetodi, jota käytetään käynnistymään\n    // silloin, kun komponentti on ladattu onnistuneesti\n    componentDidMount() {\n        console.log('did mount')\n        axios\n            .get('/reminders')\n            .then(response => {\n                console.log('promise fulfilled')\n                this.setState({ reminders: response.data })\n            })\n    }\n\n    handleReminderChange = (event) => {\n        console.log(event.target.value)\n        this.setState({ newName: event.target.value })\n    }\n\n    handleDateChange = (event) => {\n        console.log(event.target.value)\n        this.setState({ newDate: event.target.value })\n\n    }\n\n    addReminder = (event) => {\n        event.preventDefault()\n\n        // teht 2.5:  eri polut sen mukaan,\n        // onko muistiinpano jo lisätty\n        // toinen mahdollinen ratkaisu some-metodilla:\n        // this.state.reminders.some(r => r.name === this.state.newName)\n        if (this.state.reminders.map(reminder => reminder.name).includes(this.state.newName)) {\n\n            // muistiinpano on jo lisätty\n            console.log('nappia painettu, muistiinpano on jo listalla')\n            alert('Ei voida lisätä muistutusta listaan, koska se on jo lisätty!')\n\n        } else {\n            console.log('debug else-lohko')\n\n            const newReminderObject = {\n                timestamp: this.state.newDate,\n                name: this.state.newName\n            }\n\n            // Tehtävä 2.9 -- nyt uudet muistiinpanot tallennetaankin palvelimelle\n            axios.post('/reminders', newReminderObject)\n                .then(response => {\n                    this.setState({\n                        reminders: this.state.reminders.concat(response.data),\n                        newName: ''\n                    })\n                })\n\n\n        }\n    }\n\n    reloadList = (props) => {\n        axios.get('/reminders').then(response => {\n            console.log(\"loaded the updated list after deleting a reminder\")\n            this.setState({ reminders: response.data })\n        })\n    }\n\n    // Teht 2.10 - muistiinpanojen poistaminen\n    // poistetaan parametrina olevan id:n mukainen muistiinpano palvelimelta\n    // axios.delete-metodilla\n    // Sitten vastauksen saamisen jälkeen ladataan lista uudstaan, eli reloadList --> axios.get()\n    // Kyselyikkuna kysyy varmistusta (if-lohko)\n    deleteReminder = (props) => {\n\n        return () => {\n\n            if (window.confirm(`Haluatko todella poistaa tämän muistiinpanon nro ${props.id}?`)) {\n\n                axios.delete(`/reminders/${props.id}`)\n                    .then(response => {\n                        console.log(`delete ok... deleted reminder with id ${props.id}`)\n                        this.reloadList()\n                    }\n                    )\n                // axios.get: Ladataan päivitetty lista, josta yksi muistiinpano poistettiin\n            }\n        }\n\n        // const url = `http://localhost:3001/reminders/1`\n\n        // // axios.delete(url)\n        //     .then(\n        //         console.log('delete ok')\n        //     )\n\n\n\n        // axios\n        //     .get('http://localhost:3001/reminders')\n        //     .then(response => {\n        //         console.log('promise fulfilled')\n        //         this.setState({ reminders: response.data })\n        //     })\n\n\n    }\n\n    render() {\n        console.log('render')\n\n\n        return (\n            <div>\n                <h2>Muistutukset</h2>\n                <ReminderForm addReminderFunction={this.addReminder} nameToAdd={this.newName}\n                    handleReminderChange={this.handleReminderChange} handleDateChange={this.handleDateChange} />\n\n\n                <h2>Tämänhetkiset muistutukset:</h2>\n                <ul>\n                    {this.state.reminders.map(reminder => <Reminder key={reminder.id} name={reminder.name} timestamp={reminder.timestamp}\n                        deleteReminderButtonFunction={this.deleteReminder} id={reminder.id} />)}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default App\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport axios from 'axios'\n\n    // Teht 2.10 - muistiinpanojen poistaminen\n    // poistetaan parametrina olevan id:n mukainen muistiinpano palvelimelta\n    // axios.delete-metodilla\n    // Sitten vastauksen saamisen jälkeen ladataan lista uudstaan, eli reloadList --> axios.get()\n    // Kyselyikkuna kysyy varmistusta (if-lohko)\n\n\n\n// const promise2 = axios.get('http://localhost:3001/foobar')\n// console.log(promise2)\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}